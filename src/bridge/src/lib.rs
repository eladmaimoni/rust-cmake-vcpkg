// Include bindings generated by build.rs. The build script writes
// bindings.rs to $OUT_DIR; include it inside a module so we can apply
// an attribute that suppresses non-CamelCase type warnings for the
// autogenerated C type aliases.
#[allow(non_camel_case_types)]
mod bindings {
    include!(concat!(env!("OUT_DIR"), "/bindings.rs"));
}

// Re-export bindings so callers can use the generated symbols directly.
pub use bindings::*;

/// Safe wrapper around the generated FFI function `by2_add`.
pub fn by2_add_safe(a: i32, b: i32) -> i32 {
    // Bindings expose `by2_add` as an extern "C" function in this module.
    // Call it inside an unsafe block and return the result.
    unsafe { by2_add(a, b) }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_by2_add() {
        let r = by2_add_safe(2, 3);
        assert_eq!(r, 5);
    }
}
